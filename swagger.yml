openapi: 3.0.3
info:
  description: SponsorBlock API
  version: "1.0.0"
  title: SponsorBlock API
  contact:
    email: michael@mchang.name
    name: mchangrh
    url: https://github.com/mchangrh
  license:
    name: GPL 3.0
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
servers:
  - url: https://sponsor.ajay.app/api
    description: Production server (uses live data)
paths:
  /addUserAsVIP:
    post:
      tags:
        - Admin Calls
      summary: Add user to VIP Table
      description: VIPs have extra prileges and their votes count more
      parameters:
        - name: userID
          in: query
          schema:
            type: string
            format: publicUserID
          description: Public userID of the user you want to add to the VIP list
        - name: enabled
          in: query
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: ""
  /clearCache:
    post:
      tags:
        - VIP Calls
      summary: clearCache
      description: clearCache
      operationId: clearCache
      parameters:
        - name: videoID
          in: query
          schema:
            type: string
            example: ""
      responses:
        "200":
          description: ""
  /getTopUsers:
    get:
      tags:
        - Stats Calls
      summary: getTopUsers
      description: getTopUsers
      operationId: getTopUsers
      parameters:
        - name: sortType
          in: query
          schema:
            type: string
          description: "0 for by minutes saved,  1 for by view count, 2 for by total submissions"
      responses:
        "200":
          description: ""
  /getTotalStats:
    get:
      tags:
        - Stats Calls
      summary: getTotalStats
      description: getTotalStats
      operationId: getTotalStats
      parameters:
        - name: countContributingUsers
          in: query
          schema:
            type: string
            example: "false"
      responses:
        "200":
          description: ""
  /getUsername:
    post:
      tags:
        - Admin Calls
      summary: setUsername Admin
      description: setUsername Admin
      operationId: setUsernameAdmin
      parameters:
        - name: userID
          in: query
          schema:
            type: string
          description: Public userID of targeted user
        - name: username
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
  /lockCategories:
    get:
      tags:
        - Normal Requests
      summary: lockCategories SHA256
      description: lockCategories SHA256
      operationId: lockCategoriesSha256
      parameters:
        - name: prefix
          in: query
          schema:
            type: string
          description: Hash of the YouTube videoID
      responses:
        "200":
          description: ""
    post:
      tags:
        - VIP Calls
      summary: lockCategories
      description: lockCategories
      operationId: lockCategories1
      parameters:
        - name: videoID
          in: query
          schema:
            type: string
        - name: categories
          in: query
          schema:
            type: string
          description: "See https://github.com/ajayyy/SponsorBlock/wiki/Types#category"
        - name: reason
          in: query
          schema:
            type: string
          description: Reason for lock
      responses:
        "200":
          description: ""
    delete:
      tags:
        - VIP Calls
      summary: lockCategories
      description: lockCategories
      operationId: lockCategories2
      parameters:
        - name: videoID
          in: query
          schema:
            type: string
        - name: categories
          in: query
          schema:
            type: string
          description: "See https://github.com/ajayyy/SponsorBlock/wiki/Types#category"
      responses:
        "200":
          description: ""
  /purgeAllSegments:
    post:
      tags:
        - VIP Calls
      summary: purgeAllSegments
      description: purgeAllSegments
      operationId: purgeAllSegments
      parameters:
        - name: videoID
          in: query
          schema:
            type: string
            example: ""
      responses:
        "200":
          description: ""
  /searchSegments:
    get:
      tags:
        - Normal Requests
      summary: searchSegments PARAM
      description: searchSegments PARAM
      operationId: searchSegmentsParam
      parameters:
        - name: videoID
          in: query
          schema:
            type: string
          description: ID of video to pull segments for
        - name: category
          in: query
          schema:
            type: string
          description: "See https://github.com/ajayyy/SponsorBlock/wiki/Types#category"
        - name: categories
          in: query
          schema:
            type: string
          description: "use this instead of \"category\""
        - name: requiredSegment
          in: query
          schema:
            type: string
          description: segment UUID to require to be retreived
        - name: requiredSegments
          in: query
          schema:
            type: string
          description: list of segment UUIDs to require be retrieved
        - name: actionType
          in: query
          schema:
            type: string
          description: skip or mute
        - name: actionTypes
          in: query
          schema:
            type: string
            example: ""
          description: array of actionTypes
        - name: service
          in: query
          schema:
            type: string
            example: YouTube
          description: "See https://github.com/ajayyy/SponsorBlock/wiki/Types#service"
        - name: page
          in: query
          schema:
            type: string
            example: "0"
          description: page to start searching from
        - name: minVotes
          in: query
          schema:
            type: string
          description: vote threshold
        - name: maxVotes
          in: query
          schema:
            type: string
          description: vote threshold
        - name: minViews
          in: query
          schema:
            type: string
          description: view threshold
        - name: maxViews
          in: query
          schema:
            type: string
          description: view threshold
        - name: locked
          in: query
          schema:
            type: string
            example: "true"
          description: show locked segments
        - name: hidden
          in: query
          schema:
            type: string
            example: "true"
          description: show hidden segments
        - name: ignored
          in: query
          schema:
            type: string
            example: "true"
          description: show ignored segments
      responses:
        "200":
          description: ""
  /segmentInfo:
    get:
      tags:
        - Normal Requests
      summary: segmentInfo
      description: segmentInfo
      operationId: segmentInfo
      parameters:
        - name: UUID
          in: query
          schema:
            type: string
          description: can be repeated
        - name: UUIDS
          in: query
          schema:
            type: string
            example: ""
          description: "\"[\"abc\"]\""
      responses:
        "200":
          description: ""
  /segmentShift:
    post:
      tags:
        - VIP Calls
      summary: segmentShift
      description: segmentShift
      operationId: segmentShift
      parameters:
        - name: videoID
          in: query
          schema:
            type: string
            example: ""
        - name: startTime
          in: query
          schema:
            type: string
          description: float
        - name: endTime
          in: query
          schema:
            type: string
          description: float
      responses:
        "200":
          description: ""
  /setUsername:
    post:
      tags:
        - Normal Requests
        - username
      summary: setUsername
      description: setUsername
      operationId: setUsername
      parameters:
        - name: username
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
  /shadowBanUser:
    post:
      tags:
        - VIP Calls
      summary: shadowBanUser
      description: shadowBanUser
      operationId: shadowBanUser
      parameters:
        - name: userID
          in: query
          schema:
            type: string
          description: userID of user to ban
        - name: enabled
          in: query
          schema:
            type: string
            example: "true"
          description: enable or disable ban
        - name: unHideOldSubmissions
          in: query
          schema:
            type: string
            example: "false"
          description: should all previous submissions be banned as well
      responses:
        "200":
          description: ""
  /skipSegments:
    get:
      tags:
        - Normal Requests
      summary: skipSegments SHA256
      description: skipSegments SHA256
      operationId: skipSegmentsSha256
      parameters:
        - name: prefix
          in: query
          schema:
            type: string
          description: Hash of the YouTube videoID
        - name: category
          in: query
          schema:
            type: string
          description: "See https://github.com/ajayyy/SponsorBlock/wiki/Types#category"
        - name: categories
          in: query
          schema:
            type: string
          description: "use this instead of \"category\""
        - name: requiredSegment
          in: query
          schema:
            type: string
            format: segmentUUID
          description: segment UUID to require to be retreived
        - name: requiredSegments
          in: query
          schema:
            type: string
          description: list of segment UUIDs to require be retrieved
        - name: actionType
          in: query
          schema:
            type: string
          description: skip or mute
        - name: actionTypes
          in: query
          schema:
            type: string
        - name: service
          in: query
          schema:
            type: string
            example: YouTube
          description: "See https://github.com/ajayyy/SponsorBlock/wiki/Types#service"
      responses:
        "200":
          description: ""
    post:
      tags:
        - Normal Requests
      summary: skipSegments PARAM
      description: skipSegments PARAM
      operationId: skipSegmentsParam
      parameters:
        - name: videoID
          in: query
          schema:
            type: string
            example: ""
          description: ID of video to make segments for
        - name: startTime
          in: query
          schema:
            type: string
            example: ""
          description: float of starting time
        - name: endTime
          in: query
          schema:
            type: string
            example: ""
          description: float of ending time
        - name: category
          in: query
          schema:
            type: string
            example: sponsor
          description: "See https://github.com/ajayyy/SponsorBlock/wiki/Types#category"
        - name: actionType
          in: query
          schema:
            type: string
            example: skip
          description: "can also be \"mute\""
        - name: service
          in: query
          schema:
            type: string
            example: YouTube
          description: "See https://github.com/ajayyy/SponsorBlock/wiki/Types#service"
        - name: videoDuration
          in: query
          schema:
            type: string
          description: duration of video
        - name: userAgent
          in: query
          schema:
            type: string
            example: mchangrh-sbswag/1
      requestBody:
        content:
          text/plain:
            example: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/skipSegment'
  "/api/status/{value}":
    get:
      tags:
        - Stats Calls
      summary: status
      description: status
      operationId: status
      responses:
        "200":
          description: ""
    parameters:
      - name: value
        in: path
        required: true
        schema:
          type: string
        description: "uptime, commit, db, startTime or processTime"
  /userID:
    get:
      tags:
        - Normal Requests
      summary: userID
      description: userID
      operationId: userId
      parameters:
        - name: username
          in: query
          schema:
            type: string
          description: "search string for username, case sensitive"
        - name: exact
          in: query
          schema:
            type: string
            example: "false"
          description: can be set to true
      responses:
        "200":
          description: ""
  /userInfo:
    get:
      tags:
        - Normal Requests
        - User Information
      summary: userInfo Public
      description: userInfo Public
      operationId: userInfoPublic
      parameters:
        - name: publicUserID
          in: query
          schema:
            type: string
          description: user to lookup
        - name: value
          in: query
          schema:
            type: string
            example: ""
          description: "[\"userID\", \"userName\", \"minutesSaved\", \"segmentCount\", \"ignoredSegmentCount\",\n  // \"viewCount\", \"ignoredViewCount\", \"warnings\", \"warningReason\", \"reputation\",\n  // \"vip\", \"lastSegmentID\"]"
      requestBody:
        content:
          text/plain:
            example: ""
      responses:
        "200":
          description: ""
  /viewedVideoSponsorTime:
    post:
      tags:
        - Normal Requests
      summary: viewedVideoSponsorTime
      description: viewedVideoSponsorTime
      operationId: viewedVideoSponsorTime
      parameters:
        - name: UUID
          in: query
          schema:
            type: string
            example: ""
          description: UUID of the segment viewed
      requestBody:
        content:
          text/plain:
            example: ""
      responses:
        "200":
          description: ""
  /voteOnSponsorTime:
    post:
      tags:
        - Normal Requests
      summary: voteOnSponsorTime Category
      description: voteOnSponsorTime Category
      operationId: voteOnSponsorTimeCategory
      parameters:
        - name: UUID
          in: query
          schema:
            type: string
            example: ""
          description: UUID of the segment being voted on
        - name: category
          in: query
          schema:
            type: string
          description: Category to change this submission to
      requestBody:
        content:
          text/plain:
            example: ""
      responses:
        "200":
          description: ""
  /warnUser:
    post:
      tags:
        - VIP Calls
      summary: warnUser
      description: warnUser
      operationId: warnUser
      parameters:
        - name: userID
          in: query
          schema:
            type: string
          description: userID of user to ban
        - name: enabled
          in: query
          schema:
            type: string
            example: "true"
          description: enable or disable ban
      responses:
        "200":
          description: ""
components:
  schemas:
    skipSegment:
      type: object
      properties:
        segment:
          type: array
          items:
            type: integer
          maxLength: 2
        UUID:
          type: string
        category:
          type: string
        videoDuration:
          type: number
          format: float
    skipSegments:
      type: array
      minLength: 1
      items:
        $ref: '#/components/schemas/skipSegment'
format:
  segmentUUID:
    type: string
    pattern: '^[a-f0-9]{64,65}$'
  publicUserID:
    type: string
    pattern: '^[a-f0-9]{64}$'
  privateUserID:
    type: string
    format: password
    minLength: 32
tags:
  - name: Normal Requests
  - name: User Information
  - name: username
  - name: Stats Calls
  - name: VIP Calls
  - name: Admin Calls